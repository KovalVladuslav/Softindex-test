{"version":3,"sources":["components/TableHeader.js","components/Table.js","components/Form.js","App.js","index.js"],"names":["TableHeader","sortPeopleArr","className","src","alt","onClick","Table","peopleArr","deleteItemPeople","length","map","item","index","key","phone","firstName","lastName","gender","age","type","Form","nameLine","setPeopleArr","useState","name","setName","setLastName","setPhone","setGender","setAge","useForm","register","errors","handleSubmit","patterValidLetters","requiredValid","onSubmit","data","createPeopleObj","split","str","i","toUpperCase","toLowerCase","join","placeholder","value","onChange","event","target","ref","required","pattern","autocomplete","patterValidAge","App","selectedSort","setValueSort","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","select","sort","a","b","localeCompare","reverseArr","reverse","deleteItem","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb985af4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({ sortPeopleArr }) => (\r\n  <div className=\"table__title item\">\r\n    <div className=\"item__block\">\r\n      <h3>Name</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('firstName')}></img>\r\n    </div>\r\n    <div className=\"item__block\">\r\n      <h3>Last Name</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('lastName')}></img>\r\n    </div>\r\n    <div className=\"item__block\">\r\n      <h3>Phone</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('phone')}></img>\r\n    </div>\r\n    <div className=\"item__block\">\r\n      <h3>Gender</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('gender')}></img>\r\n    </div>\r\n    <div className=\"item__block\">\r\n      <h3>Age</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('age')}></img>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default TableHeader;\r\n\r\nTableHeader.propTypes = {\r\n  sortPeopleArr: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/table.css';\r\nimport TableHeader from './TableHeader';\r\n\r\nconst Table = ({ peopleArr, sortPeopleArr, deleteItemPeople }) => (\r\n  <div className=\"table\">\r\n    <TableHeader sortPeopleArr={sortPeopleArr}/>\r\n    {!peopleArr.length > 0 ? (\r\n      <h1 className=\"table__empty\">The list is empty...</h1>\r\n    ) : (\r\n      peopleArr.map((item, index) => (\r\n        <div className=\"item\" key={item.phone}>\r\n          <div className=\"item__block\">\r\n            <h3>{item.firstName}</h3>\r\n          </div>\r\n          <div className=\"item__block\">\r\n            <h3>{item.lastName}</h3>\r\n          </div>\r\n          <div className=\"item__block\">\r\n            <h3>{item.phone}</h3>\r\n          </div>\r\n          <div className=\"item__block\">\r\n            <h3>{item.gender}</h3>\r\n          </div>\r\n          <div className=\"item__block\">\r\n            <h3>{item.age}</h3>\r\n          </div>\r\n          <button\r\n            className=\"item__button\"\r\n            type=\"button\"\r\n            onClick={() => deleteItemPeople(index)}\r\n          >\r\n            <img src=\"./icons/remove.svg\" alt=\"delete\" className=\"item__delete\"></img>\r\n          </button>\r\n        </div>\r\n      ))\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default Table;\r\n\r\nTable.propTypes = {\r\n  peopleArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPeopleArr: PropTypes.func.isRequired,\r\n  deleteItemPeople: PropTypes.func.isRequired,\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport '../styles/form.css';\r\n\r\nconst Form = ({ peopleArr, setPeopleArr }) => {\r\n  const [ name, setName ] = useState('');\r\n  const [ lastName, setLastName ] = useState('');\r\n  const [ phone, setPhone ] = useState('')\r\n  const [ gender, setGender ] = useState('')\r\n  const [ age, setAge ] = useState('');\r\n  const { register, errors, handleSubmit } = useForm()\r\n\r\n  const patterValidLetters = (nameLine) => (\r\n    errors[nameLine] && errors[nameLine].type === 'pattern'\r\n      && <span className=\"form__error\">Only letters should be in this line, please correct</span>\r\n  )\r\n\r\n  const patterValidNumber = (nameLine) => (\r\n    errors[nameLine] && errors[nameLine].type === 'pattern'\r\n      && <span className=\"form__error\">This line should only contain numbers, please correct</span>\r\n  )\r\n\r\n  const patterValidAge = (nameLine) => (\r\n    errors[nameLine] && errors[nameLine].type === 'pattern'\r\n      && <span className=\"form__error\">This line should only contain numbers, 10 to 99 years old</span>\r\n  )\r\n\r\n  const requiredValid = (nameLine) => (\r\n    errors[nameLine] && errors[nameLine].type === 'required' && <span className=\"form__error\">Line is required</span>\r\n  )\r\n\r\n  const onSubmit = data => { \r\n    const createPeopleObj = {\r\n      firstName: data.firstName.split('').map((str, i) => {\r\n        if(i === 0) {\r\n          return str.toUpperCase();\r\n        }\r\n        return str.toLowerCase();\r\n      }).join(''),\r\n      lastName: data.lastName.split('').map((str, i) => {\r\n        if(i === 0) {\r\n          return str.toUpperCase();\r\n        }\r\n        return str.toLowerCase();\r\n      }).join(''),\r\n      phone,\r\n      gender,\r\n      age\r\n    }\r\n\r\n    setPeopleArr([...peopleArr, createPeopleObj]);\r\n    setName('')\r\n    setLastName('')\r\n    setPhone('')\r\n    setAge('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\r\n      <h2 className=\"form__title\">Form</h2>\r\n      <div className=\"form__block\">\r\n        <input\r\n          className=\"form__input\"\r\n          name=\"firstName\"\r\n          placeholder=\"Your name\"\r\n          value={name}\r\n          onChange={(event) => setName(event.target.value)}\r\n          ref={register({ required: true, pattern: /^[A-Za-z]+$/i })}\r\n          autocomplete=\"off\"\r\n        />\r\n        {patterValidLetters('firstName')}\r\n        {requiredValid('firstName')}\r\n      </div>\r\n      <div className=\"form__block\">\r\n        <input\r\n          name=\"lastName\"\r\n          className=\"form__input\"\r\n          placeholder=\"Your last name\"\r\n          value={lastName}\r\n          onChange={(event) => setLastName(event.target.value)}\r\n          ref={register({ required: true, pattern: /^[A-Za-z]+$/i })}\r\n          autocomplete=\"off\"\r\n        />\r\n        {patterValidLetters(\"lastName\")}\r\n        {requiredValid(\"lastName\")}\r\n      </div>\r\n      <div className=\"form__block\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form__input\"\r\n          name=\"phone\"\r\n          placeholder=\"Your phone\"\r\n          value={phone}\r\n          onChange={(event) => setPhone(event.target.value)}\r\n          ref={register({ required: true, pattern: /^\\d+$/i})}\r\n          autocomplete=\"off\"\r\n          />\r\n        {patterValidNumber(\"phone\")}\r\n        {requiredValid(\"phone\")}\r\n      </div>\r\n      <div className=\"form__block\">\r\n        <span className=\"form__radio\">\r\n          <p className=\"form__radio__title\">Choose your gender</p>\r\n          <label>\r\n            <input type=\"radio\"\r\n              value=\"male\"\r\n              name=\"gender\"\r\n              onChange={() => setGender(\"male\")}\r\n              ref={register({ required: true })}\r\n            />\r\n            <p className=\"form__radio__title\">male</p>\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"female\"\r\n              name=\"gender\"\r\n              onChange={() => setGender(\"female\")}\r\n              ref={register({ required: true })}\r\n            />\r\n            <p className=\"form__radio__title\">female</p>\r\n          </label>\r\n        </span>\r\n        {requiredValid(\"gender\")}\r\n      </div>\r\n      <div className=\"form__block\">\r\n        <label>\r\n          <input\r\n            placeholder=\"how old are you?\"\r\n            type=\"text\"\r\n            className=\"form__input\"\r\n            value={age}\r\n            onChange={(event) => setAge(event.target.value)}\r\n            name=\"age\"\r\n            ref={register({ required: true, pattern: /^[1][0-2][0-9]$|^[1-9][0-9]$/})}\r\n            autocomplete=\"off\"\r\n          />\r\n        </label>\r\n        {patterValidAge(\"age\")}\r\n        {requiredValid(\"age\")}\r\n      </div>\r\n      <input type=\"submit\" className=\"form__button\"/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n  peopleArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPeopleArr: PropTypes.func.isRequired,\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './styles/app.css';\nimport Table from './components/Table';\nimport Form from './components/Form';\n\nconst App = () => {\n  const [peopleArr, setPeopleArr] = useState([]);\n  const [selectedSort, setValueSort] = useState('');\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"list-people\");\n    if (data) {\n      setPeopleArr(JSON.parse(data))\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"list-people\", JSON.stringify(peopleArr))\n  });\n\n  const deleteItemPeople = (index) => {\n    const deleteItem = peopleArr.filter(item => peopleArr[index] !== item)\n\n    setPeopleArr(deleteItem);\n  };\n\n  const sortPeopleArr = (select) => {\n    switch(select) {\n      case 'firstName':\n      case 'lastName':\n      case 'gender':\n        if (select !== selectedSort) {\n          setPeopleArr([...peopleArr]\n            .sort((a, b) => a[select].localeCompare(b[select])));\n          setValueSort(select)\n        };\n\n        break;\n      case 'age':\n      case 'phone':\n        if (select !== selectedSort) {\n          setPeopleArr([...peopleArr]\n            .sort((a, b) => a[select] - b[select]));\n          setValueSort(select)\n        }\n\n        break;\n      default: setPeopleArr([...peopleArr]);\n    }\n\n    if (select === selectedSort) {\n      const reverseArr = [...peopleArr].reverse();\n\n      setPeopleArr(reverseArr)\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <Table\n        peopleArr={peopleArr}\n        sortPeopleArr={sortPeopleArr}\n        deleteItemPeople={deleteItemPeople}\n      />\n      <Form\n        peopleArr={peopleArr}\n        setPeopleArr={setPeopleArr}\n      />\n    </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}